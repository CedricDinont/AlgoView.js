
Vue *******************************

Bugs:

- traits en gras séparant les appels de fonction 
- adresses : elles ne sont plus en bleu dans les vues "table"



A ajouter :
- faire en sorte que l'on puisse agrandir la zone de dessin centrale par drag & drop d'éléments
- mettre des scroll bar dans la zone de dessin centrale




Interpréteur **********************

On ne peut pas (mais on devrait) :
- placer 1 WHILE juste après un début de bloc (BEGIN, IF, WHILE...) ; si on intercale une ligne vide, ça marche
	--> même problème que le cas précédent ?
- mettre des commentaires en début de ligne dans la partie VAR (mais on peut en mettre après une déclaration de variable)
- accéder à la valeur de s.t[i] où s est une structure et t un tableau
- faire l'affectation c <- 'a' où c est un CHARACTER (+ revoir la coloration syntaxique)
- placer des breakpoints dans le contrôle externe
- quand on met set-start-pause à vrai dans un contrôle externe, on ne peut pas appuyer sur continue dans l'interface


On peut (mais on ne devrait pas):
- utiliser des variables non initialisées
- Mettre deux END de suite
	--> il n'y a pas d'erreur de compilation, mais la fonction correspondante est ignorée et considérée comme inexistante à l'exécution
	
Comportements bizarres (et perturbants!) :
- arrêt sur des lignes alors qu'il n'y a aucun point d'arrêt, parfois plusieurs fois dans un programme (l'appui sur continue permet de poursuivre l'exécution sans erreur)
    --> problème identifié : boucles infinies provoquant l'envoi d'une exception InfiniteLoop inexistante
    

    
Erreurs pas claires:
- utilisation d'une structure non définie (l'interpréteur lance une exception inexistante, i.e. non implémentée)
- boucles infinies (idem)


- pb d'inférence des types des arguments d'une fonction dans le cas d'un argument type tableau à taille fixée

PROCEDURE foo(t:INTEGER[3][3])
BEGIN
	PRINTLN("foo")
END

PROCEDURE bar(t:INTEGER[][])
BEGIN
	PRINTLN("bar")
END

PROCEDURE main()
VAR
	t:INTEGER[3][3]
BEGIN
	bar(t)
	foo(t)
END

