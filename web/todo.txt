
Vue *******************************

Bugs:

- traits en gras séparant les appels de fonction 
- adresses : elles ne sont plus en bleu dans les vues "table"



A ajouter :
- faire en sorte que l'on puisse agrandir la zone de dessin centrale par drag & drop d'éléments
- mettre des scroll bar dans la zone de dessin centrale




Interpréteur **********************

- Utiliser systématiquement la fonction throwException et ne pas faire de new
- Il y a des new alors que la classe n'existe pas 

On ne peut pas (mais on devrait) :
** placer 1 WHILE juste après un début de bloc (BEGIN, IF, WHILE...) ; si on intercale une ligne vide, ça marche
	--> même problème que le cas précédent ?
- mettre des commentaires en début de ligne dans la partie VAR (mais on peut en mettre après une déclaration de variable)
** accéder à la valeur de s.t[i] où s est une structure et t un tableau
- faire l'affectation c <- 'a' où c est un CHARACTER (+ revoir la coloration syntaxique)
- quand on met set-start-pause à vrai dans un contrôle externe, on ne peut pas appuyer sur continue dans l'interface


On peut (mais on ne devrait pas):
- utiliser des variables non initialisées
- Mettre deux END de suite
	--> il n'y a pas d'erreur de compilation, mais la fonction correspondante est ignorée et considérée comme inexistante à l'exécution
	
Comportements bizarres (et perturbants!) :

- conversions implicites : a + b renvoie systématiquement le type de a
    
Erreurs pas claires:
** utilisation d'une structure non définie (l'interpréteur lance une exception inexistante, i.e. non implémentée) -> devrait ne pas compiler
	
** boucles infinies -> envoi de l'exception à revoir
	--> MSO 04/06/13 : A priori corrigé : InfiniteLoopException ajoutée et JSUtils.throwException() utilisée ; à vérifier dans les tests unitaires

- pb d'inférence des types des arguments d'une fonction dans le cas d'un argument type tableau à taille fixée
	--> MSO 04/06/13 : A priori corrigé : UndeclaredException ajoutée et JSUtils.throwException() utilisée ; à vérifier dans les tests unitaires
	--> Nouvelle exception à la fois utilisée pour les structures, les variables, et les fonctions (classe Stack modifiée pour les variables, voir pour le reste)
	--> A tester
	
PROCEDURE foo(t:INTEGER[3][3])
BEGIN
	PRINTLN("foo")
END

PROCEDURE bar(t:INTEGER[][])
BEGIN
	PRINTLN("bar")
END

PROCEDURE main()
VAR
	t:INTEGER[3][3]
BEGIN
	bar(t)
	foo(t)
END

